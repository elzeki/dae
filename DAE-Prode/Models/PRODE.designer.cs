#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAE_Prode.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PRODE")]
	public partial class PRODEDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertboleta(boleta instance);
    partial void Updateboleta(boleta instance);
    partial void Deleteboleta(boleta instance);
    partial void Insertusuario(usuario instance);
    partial void Updateusuario(usuario instance);
    partial void Deleteusuario(usuario instance);
    partial void Insertequipo(equipo instance);
    partial void Updateequipo(equipo instance);
    partial void Deleteequipo(equipo instance);
    partial void Insertfecha(fecha instance);
    partial void Updatefecha(fecha instance);
    partial void Deletefecha(fecha instance);
    partial void Insertpartido(partido instance);
    partial void Updatepartido(partido instance);
    partial void Deletepartido(partido instance);
    partial void Insertrole(role instance);
    partial void Updaterole(role instance);
    partial void Deleterole(role instance);
    partial void Inserttablageneral(tablageneral instance);
    partial void Updatetablageneral(tablageneral instance);
    partial void Deletetablageneral(tablageneral instance);
    partial void Inserttopfive(topfive instance);
    partial void Updatetopfive(topfive instance);
    partial void Deletetopfive(topfive instance);
    partial void Inserttopten(topten instance);
    partial void Updatetopten(topten instance);
    partial void Deletetopten(topten instance);
    partial void Inserttorneo(torneo instance);
    partial void Updatetorneo(torneo instance);
    partial void Deletetorneo(torneo instance);
    #endregion
		
		public PRODEDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PRODEConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PRODEDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PRODEDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PRODEDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PRODEDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<boleta> boletas
		{
			get
			{
				return this.GetTable<boleta>();
			}
		}
		
		public System.Data.Linq.Table<usuario> usuarios
		{
			get
			{
				return this.GetTable<usuario>();
			}
		}
		
		public System.Data.Linq.Table<equipo> equipos
		{
			get
			{
				return this.GetTable<equipo>();
			}
		}
		
		public System.Data.Linq.Table<fecha> fechas
		{
			get
			{
				return this.GetTable<fecha>();
			}
		}
		
		public System.Data.Linq.Table<partido> partidos
		{
			get
			{
				return this.GetTable<partido>();
			}
		}
		
		public System.Data.Linq.Table<role> roles
		{
			get
			{
				return this.GetTable<role>();
			}
		}
		
		public System.Data.Linq.Table<tablageneral> tablagenerals
		{
			get
			{
				return this.GetTable<tablageneral>();
			}
		}
		
		public System.Data.Linq.Table<topfive> topfives
		{
			get
			{
				return this.GetTable<topfive>();
			}
		}
		
		public System.Data.Linq.Table<topten> toptens
		{
			get
			{
				return this.GetTable<topten>();
			}
		}
		
		public System.Data.Linq.Table<torneo> torneos
		{
			get
			{
				return this.GetTable<torneo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.boletas")]
	public partial class boleta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _equipolocal;
		
		private int _equipovisita;
		
		private int _goleslocal;
		
		private int _golesvisita;
		
		private int _idfechatorneo;
		
		private string _estadio;
		
		private int _idusuario;
		
		private int _puntostotales;
		
		private int _editable;
		
		private EntityRef<usuario> _usuario;
		
		private EntityRef<equipo> _equipo;
		
		private EntityRef<fecha> _fecha;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnequipolocalChanging(int value);
    partial void OnequipolocalChanged();
    partial void OnequipovisitaChanging(int value);
    partial void OnequipovisitaChanged();
    partial void OngoleslocalChanging(int value);
    partial void OngoleslocalChanged();
    partial void OngolesvisitaChanging(int value);
    partial void OngolesvisitaChanged();
    partial void OnidfechatorneoChanging(int value);
    partial void OnidfechatorneoChanged();
    partial void OnestadioChanging(string value);
    partial void OnestadioChanged();
    partial void OnidusuarioChanging(int value);
    partial void OnidusuarioChanged();
    partial void OnpuntostotalesChanging(int value);
    partial void OnpuntostotalesChanged();
    partial void OneditableChanging(int value);
    partial void OneditableChanged();
    #endregion
		
		public boleta()
		{
			this._usuario = default(EntityRef<usuario>);
			this._equipo = default(EntityRef<equipo>);
			this._fecha = default(EntityRef<fecha>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_equipolocal", DbType="Int NOT NULL")]
		public int equipolocal
		{
			get
			{
				return this._equipolocal;
			}
			set
			{
				if ((this._equipolocal != value))
				{
					if (this._equipo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnequipolocalChanging(value);
					this.SendPropertyChanging();
					this._equipolocal = value;
					this.SendPropertyChanged("equipolocal");
					this.OnequipolocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_equipovisita", DbType="Int NOT NULL")]
		public int equipovisita
		{
			get
			{
				return this._equipovisita;
			}
			set
			{
				if ((this._equipovisita != value))
				{
					this.OnequipovisitaChanging(value);
					this.SendPropertyChanging();
					this._equipovisita = value;
					this.SendPropertyChanged("equipovisita");
					this.OnequipovisitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goleslocal", DbType="Int NOT NULL")]
		public int goleslocal
		{
			get
			{
				return this._goleslocal;
			}
			set
			{
				if ((this._goleslocal != value))
				{
					this.OngoleslocalChanging(value);
					this.SendPropertyChanging();
					this._goleslocal = value;
					this.SendPropertyChanged("goleslocal");
					this.OngoleslocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_golesvisita", DbType="Int NOT NULL")]
		public int golesvisita
		{
			get
			{
				return this._golesvisita;
			}
			set
			{
				if ((this._golesvisita != value))
				{
					this.OngolesvisitaChanging(value);
					this.SendPropertyChanging();
					this._golesvisita = value;
					this.SendPropertyChanged("golesvisita");
					this.OngolesvisitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idfechatorneo", DbType="Int NOT NULL")]
		public int idfechatorneo
		{
			get
			{
				return this._idfechatorneo;
			}
			set
			{
				if ((this._idfechatorneo != value))
				{
					if (this._fecha.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidfechatorneoChanging(value);
					this.SendPropertyChanging();
					this._idfechatorneo = value;
					this.SendPropertyChanged("idfechatorneo");
					this.OnidfechatorneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estadio", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string estadio
		{
			get
			{
				return this._estadio;
			}
			set
			{
				if ((this._estadio != value))
				{
					this.OnestadioChanging(value);
					this.SendPropertyChanging();
					this._estadio = value;
					this.SendPropertyChanged("estadio");
					this.OnestadioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idusuario", DbType="Int NOT NULL")]
		public int idusuario
		{
			get
			{
				return this._idusuario;
			}
			set
			{
				if ((this._idusuario != value))
				{
					if (this._usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidusuarioChanging(value);
					this.SendPropertyChanging();
					this._idusuario = value;
					this.SendPropertyChanged("idusuario");
					this.OnidusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_puntostotales", DbType="Int NOT NULL")]
		public int puntostotales
		{
			get
			{
				return this._puntostotales;
			}
			set
			{
				if ((this._puntostotales != value))
				{
					this.OnpuntostotalesChanging(value);
					this.SendPropertyChanging();
					this._puntostotales = value;
					this.SendPropertyChanged("puntostotales");
					this.OnpuntostotalesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_editable", DbType="Int NOT NULL")]
		public int editable
		{
			get
			{
				return this._editable;
			}
			set
			{
				if ((this._editable != value))
				{
					this.OneditableChanging(value);
					this.SendPropertyChanging();
					this._editable = value;
					this.SendPropertyChanged("editable");
					this.OneditableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_boleta", Storage="_usuario", ThisKey="idusuario", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.boletas.Remove(this);
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.boletas.Add(this);
						this._idusuario = value.id;
					}
					else
					{
						this._idusuario = default(int);
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="equipo_boleta", Storage="_equipo", ThisKey="equipolocal", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public equipo equipo
		{
			get
			{
				return this._equipo.Entity;
			}
			set
			{
				equipo previousValue = this._equipo.Entity;
				if (((previousValue != value) 
							|| (this._equipo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._equipo.Entity = null;
						previousValue.boletas.Remove(this);
					}
					this._equipo.Entity = value;
					if ((value != null))
					{
						value.boletas.Add(this);
						this._equipolocal = value.id;
					}
					else
					{
						this._equipolocal = default(int);
					}
					this.SendPropertyChanged("equipo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fecha_boleta", Storage="_fecha", ThisKey="idfechatorneo", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public fecha fecha
		{
			get
			{
				return this._fecha.Entity;
			}
			set
			{
				fecha previousValue = this._fecha.Entity;
				if (((previousValue != value) 
							|| (this._fecha.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._fecha.Entity = null;
						previousValue.boletas.Remove(this);
					}
					this._fecha.Entity = value;
					if ((value != null))
					{
						value.boletas.Add(this);
						this._idfechatorneo = value.id;
					}
					else
					{
						this._idfechatorneo = default(int);
					}
					this.SendPropertyChanged("fecha");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuarios")]
	public partial class usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private string _nombre;
		
		private string _apellido;
		
		private string _fechanac;
		
		private string _email;
		
		private int _idrol;
		
		private EntitySet<boleta> _boletas;
		
		private EntitySet<topfive> _topfives;
		
		private EntitySet<topten> _toptens;
		
		private EntityRef<role> _role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OnfechanacChanging(string value);
    partial void OnfechanacChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnidrolChanging(int value);
    partial void OnidrolChanged();
    #endregion
		
		public usuario()
		{
			this._boletas = new EntitySet<boleta>(new Action<boleta>(this.attach_boletas), new Action<boleta>(this.detach_boletas));
			this._topfives = new EntitySet<topfive>(new Action<topfive>(this.attach_topfives), new Action<topfive>(this.detach_topfives));
			this._toptens = new EntitySet<topten>(new Action<topten>(this.attach_toptens), new Action<topten>(this.detach_toptens));
			this._role = default(EntityRef<role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechanac", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string fechanac
		{
			get
			{
				return this._fechanac;
			}
			set
			{
				if ((this._fechanac != value))
				{
					this.OnfechanacChanging(value);
					this.SendPropertyChanging();
					this._fechanac = value;
					this.SendPropertyChanged("fechanac");
					this.OnfechanacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idrol", DbType="Int NOT NULL")]
		public int idrol
		{
			get
			{
				return this._idrol;
			}
			set
			{
				if ((this._idrol != value))
				{
					if (this._role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidrolChanging(value);
					this.SendPropertyChanging();
					this._idrol = value;
					this.SendPropertyChanged("idrol");
					this.OnidrolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_boleta", Storage="_boletas", ThisKey="id", OtherKey="idusuario")]
		public EntitySet<boleta> boletas
		{
			get
			{
				return this._boletas;
			}
			set
			{
				this._boletas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_topfive", Storage="_topfives", ThisKey="id", OtherKey="idusuario")]
		public EntitySet<topfive> topfives
		{
			get
			{
				return this._topfives;
			}
			set
			{
				this._topfives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_topten", Storage="_toptens", ThisKey="id", OtherKey="idusuario")]
		public EntitySet<topten> toptens
		{
			get
			{
				return this._toptens;
			}
			set
			{
				this._toptens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_usuario", Storage="_role", ThisKey="idrol", OtherKey="id", IsForeignKey=true)]
		public role role
		{
			get
			{
				return this._role.Entity;
			}
			set
			{
				role previousValue = this._role.Entity;
				if (((previousValue != value) 
							|| (this._role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._role.Entity = null;
						previousValue.usuarios.Remove(this);
					}
					this._role.Entity = value;
					if ((value != null))
					{
						value.usuarios.Add(this);
						this._idrol = value.id;
					}
					else
					{
						this._idrol = default(int);
					}
					this.SendPropertyChanged("role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_boletas(boleta entity)
		{
			this.SendPropertyChanging();
			entity.usuario = this;
		}
		
		private void detach_boletas(boleta entity)
		{
			this.SendPropertyChanging();
			entity.usuario = null;
		}
		
		private void attach_topfives(topfive entity)
		{
			this.SendPropertyChanging();
			entity.usuario = this;
		}
		
		private void detach_topfives(topfive entity)
		{
			this.SendPropertyChanging();
			entity.usuario = null;
		}
		
		private void attach_toptens(topten entity)
		{
			this.SendPropertyChanging();
			entity.usuario = this;
		}
		
		private void detach_toptens(topten entity)
		{
			this.SendPropertyChanging();
			entity.usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.equipos")]
	public partial class equipo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private EntitySet<boleta> _boletas;
		
		private EntitySet<partido> _partidos;
		
		private EntitySet<tablageneral> _tablagenerals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public equipo()
		{
			this._boletas = new EntitySet<boleta>(new Action<boleta>(this.attach_boletas), new Action<boleta>(this.detach_boletas));
			this._partidos = new EntitySet<partido>(new Action<partido>(this.attach_partidos), new Action<partido>(this.detach_partidos));
			this._tablagenerals = new EntitySet<tablageneral>(new Action<tablageneral>(this.attach_tablagenerals), new Action<tablageneral>(this.detach_tablagenerals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="equipo_boleta", Storage="_boletas", ThisKey="id", OtherKey="equipolocal")]
		public EntitySet<boleta> boletas
		{
			get
			{
				return this._boletas;
			}
			set
			{
				this._boletas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="equipo_partido", Storage="_partidos", ThisKey="id", OtherKey="equipolocal")]
		public EntitySet<partido> partidos
		{
			get
			{
				return this._partidos;
			}
			set
			{
				this._partidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="equipo_tablageneral", Storage="_tablagenerals", ThisKey="id", OtherKey="idequipo")]
		public EntitySet<tablageneral> tablagenerals
		{
			get
			{
				return this._tablagenerals;
			}
			set
			{
				this._tablagenerals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_boletas(boleta entity)
		{
			this.SendPropertyChanging();
			entity.equipo = this;
		}
		
		private void detach_boletas(boleta entity)
		{
			this.SendPropertyChanging();
			entity.equipo = null;
		}
		
		private void attach_partidos(partido entity)
		{
			this.SendPropertyChanging();
			entity.equipo = this;
		}
		
		private void detach_partidos(partido entity)
		{
			this.SendPropertyChanging();
			entity.equipo = null;
		}
		
		private void attach_tablagenerals(tablageneral entity)
		{
			this.SendPropertyChanging();
			entity.equipo = this;
		}
		
		private void detach_tablagenerals(tablageneral entity)
		{
			this.SendPropertyChanging();
			entity.equipo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.fechas")]
	public partial class fecha : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idtorneo;
		
		private string _nombre;
		
		private string _fecha1;
		
		private EntitySet<boleta> _boletas;
		
		private EntitySet<partido> _partidos;
		
		private EntityRef<torneo> _torneo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidtorneoChanging(int value);
    partial void OnidtorneoChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void Onfecha1Changing(string value);
    partial void Onfecha1Changed();
    #endregion
		
		public fecha()
		{
			this._boletas = new EntitySet<boleta>(new Action<boleta>(this.attach_boletas), new Action<boleta>(this.detach_boletas));
			this._partidos = new EntitySet<partido>(new Action<partido>(this.attach_partidos), new Action<partido>(this.detach_partidos));
			this._torneo = default(EntityRef<torneo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idtorneo", DbType="Int NOT NULL")]
		public int idtorneo
		{
			get
			{
				return this._idtorneo;
			}
			set
			{
				if ((this._idtorneo != value))
				{
					if (this._torneo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidtorneoChanging(value);
					this.SendPropertyChanging();
					this._idtorneo = value;
					this.SendPropertyChanged("idtorneo");
					this.OnidtorneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string fecha1
		{
			get
			{
				return this._fecha1;
			}
			set
			{
				if ((this._fecha1 != value))
				{
					this.Onfecha1Changing(value);
					this.SendPropertyChanging();
					this._fecha1 = value;
					this.SendPropertyChanged("fecha1");
					this.Onfecha1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fecha_boleta", Storage="_boletas", ThisKey="id", OtherKey="idfechatorneo")]
		public EntitySet<boleta> boletas
		{
			get
			{
				return this._boletas;
			}
			set
			{
				this._boletas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fecha_partido", Storage="_partidos", ThisKey="id", OtherKey="idfechatorneo")]
		public EntitySet<partido> partidos
		{
			get
			{
				return this._partidos;
			}
			set
			{
				this._partidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="torneo_fecha", Storage="_torneo", ThisKey="idtorneo", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public torneo torneo
		{
			get
			{
				return this._torneo.Entity;
			}
			set
			{
				torneo previousValue = this._torneo.Entity;
				if (((previousValue != value) 
							|| (this._torneo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._torneo.Entity = null;
						previousValue.fechas.Remove(this);
					}
					this._torneo.Entity = value;
					if ((value != null))
					{
						value.fechas.Add(this);
						this._idtorneo = value.id;
					}
					else
					{
						this._idtorneo = default(int);
					}
					this.SendPropertyChanged("torneo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_boletas(boleta entity)
		{
			this.SendPropertyChanging();
			entity.fecha = this;
		}
		
		private void detach_boletas(boleta entity)
		{
			this.SendPropertyChanging();
			entity.fecha = null;
		}
		
		private void attach_partidos(partido entity)
		{
			this.SendPropertyChanging();
			entity.fecha = this;
		}
		
		private void detach_partidos(partido entity)
		{
			this.SendPropertyChanging();
			entity.fecha = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.partidos")]
	public partial class partido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _equipolocal;
		
		private int _equipovisita;
		
		private int _goleslocal;
		
		private int _golesvisita;
		
		private int _idfechatorneo;
		
		private int _jugado;
		
		private string _estadio;
		
		private EntityRef<equipo> _equipo;
		
		private EntityRef<fecha> _fecha;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnequipolocalChanging(int value);
    partial void OnequipolocalChanged();
    partial void OnequipovisitaChanging(int value);
    partial void OnequipovisitaChanged();
    partial void OngoleslocalChanging(int value);
    partial void OngoleslocalChanged();
    partial void OngolesvisitaChanging(int value);
    partial void OngolesvisitaChanged();
    partial void OnidfechatorneoChanging(int value);
    partial void OnidfechatorneoChanged();
    partial void OnjugadoChanging(int value);
    partial void OnjugadoChanged();
    partial void OnestadioChanging(string value);
    partial void OnestadioChanged();
    #endregion
		
		public partido()
		{
			this._equipo = default(EntityRef<equipo>);
			this._fecha = default(EntityRef<fecha>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_equipolocal", DbType="Int NOT NULL")]
		public int equipolocal
		{
			get
			{
				return this._equipolocal;
			}
			set
			{
				if ((this._equipolocal != value))
				{
					if (this._equipo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnequipolocalChanging(value);
					this.SendPropertyChanging();
					this._equipolocal = value;
					this.SendPropertyChanged("equipolocal");
					this.OnequipolocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_equipovisita", DbType="Int NOT NULL")]
		public int equipovisita
		{
			get
			{
				return this._equipovisita;
			}
			set
			{
				if ((this._equipovisita != value))
				{
					this.OnequipovisitaChanging(value);
					this.SendPropertyChanging();
					this._equipovisita = value;
					this.SendPropertyChanged("equipovisita");
					this.OnequipovisitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goleslocal", DbType="Int NOT NULL")]
		public int goleslocal
		{
			get
			{
				return this._goleslocal;
			}
			set
			{
				if ((this._goleslocal != value))
				{
					this.OngoleslocalChanging(value);
					this.SendPropertyChanging();
					this._goleslocal = value;
					this.SendPropertyChanged("goleslocal");
					this.OngoleslocalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_golesvisita", DbType="Int NOT NULL")]
		public int golesvisita
		{
			get
			{
				return this._golesvisita;
			}
			set
			{
				if ((this._golesvisita != value))
				{
					this.OngolesvisitaChanging(value);
					this.SendPropertyChanging();
					this._golesvisita = value;
					this.SendPropertyChanged("golesvisita");
					this.OngolesvisitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idfechatorneo", DbType="Int NOT NULL")]
		public int idfechatorneo
		{
			get
			{
				return this._idfechatorneo;
			}
			set
			{
				if ((this._idfechatorneo != value))
				{
					if (this._fecha.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidfechatorneoChanging(value);
					this.SendPropertyChanging();
					this._idfechatorneo = value;
					this.SendPropertyChanged("idfechatorneo");
					this.OnidfechatorneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jugado", DbType="Int NOT NULL")]
		public int jugado
		{
			get
			{
				return this._jugado;
			}
			set
			{
				if ((this._jugado != value))
				{
					this.OnjugadoChanging(value);
					this.SendPropertyChanging();
					this._jugado = value;
					this.SendPropertyChanged("jugado");
					this.OnjugadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estadio", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string estadio
		{
			get
			{
				return this._estadio;
			}
			set
			{
				if ((this._estadio != value))
				{
					this.OnestadioChanging(value);
					this.SendPropertyChanging();
					this._estadio = value;
					this.SendPropertyChanged("estadio");
					this.OnestadioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="equipo_partido", Storage="_equipo", ThisKey="equipolocal", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public equipo equipo
		{
			get
			{
				return this._equipo.Entity;
			}
			set
			{
				equipo previousValue = this._equipo.Entity;
				if (((previousValue != value) 
							|| (this._equipo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._equipo.Entity = null;
						previousValue.partidos.Remove(this);
					}
					this._equipo.Entity = value;
					if ((value != null))
					{
						value.partidos.Add(this);
						this._equipolocal = value.id;
					}
					else
					{
						this._equipolocal = default(int);
					}
					this.SendPropertyChanged("equipo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="fecha_partido", Storage="_fecha", ThisKey="idfechatorneo", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public fecha fecha
		{
			get
			{
				return this._fecha.Entity;
			}
			set
			{
				fecha previousValue = this._fecha.Entity;
				if (((previousValue != value) 
							|| (this._fecha.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._fecha.Entity = null;
						previousValue.partidos.Remove(this);
					}
					this._fecha.Entity = value;
					if ((value != null))
					{
						value.partidos.Add(this);
						this._idfechatorneo = value.id;
					}
					else
					{
						this._idfechatorneo = default(int);
					}
					this.SendPropertyChanged("fecha");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.roles")]
	public partial class role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private EntitySet<usuario> _usuarios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public role()
		{
			this._usuarios = new EntitySet<usuario>(new Action<usuario>(this.attach_usuarios), new Action<usuario>(this.detach_usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_usuario", Storage="_usuarios", ThisKey="id", OtherKey="idrol")]
		public EntitySet<usuario> usuarios
		{
			get
			{
				return this._usuarios;
			}
			set
			{
				this._usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_usuarios(usuario entity)
		{
			this.SendPropertyChanging();
			entity.role = this;
		}
		
		private void detach_usuarios(usuario entity)
		{
			this.SendPropertyChanging();
			entity.role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tablageneral")]
	public partial class tablageneral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idequipo;
		
		private int _puntos;
		
		private EntityRef<equipo> _equipo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidequipoChanging(int value);
    partial void OnidequipoChanged();
    partial void OnpuntosChanging(int value);
    partial void OnpuntosChanged();
    #endregion
		
		public tablageneral()
		{
			this._equipo = default(EntityRef<equipo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idequipo", DbType="Int NOT NULL")]
		public int idequipo
		{
			get
			{
				return this._idequipo;
			}
			set
			{
				if ((this._idequipo != value))
				{
					if (this._equipo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidequipoChanging(value);
					this.SendPropertyChanging();
					this._idequipo = value;
					this.SendPropertyChanged("idequipo");
					this.OnidequipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_puntos", DbType="Int NOT NULL")]
		public int puntos
		{
			get
			{
				return this._puntos;
			}
			set
			{
				if ((this._puntos != value))
				{
					this.OnpuntosChanging(value);
					this.SendPropertyChanging();
					this._puntos = value;
					this.SendPropertyChanged("puntos");
					this.OnpuntosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="equipo_tablageneral", Storage="_equipo", ThisKey="idequipo", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public equipo equipo
		{
			get
			{
				return this._equipo.Entity;
			}
			set
			{
				equipo previousValue = this._equipo.Entity;
				if (((previousValue != value) 
							|| (this._equipo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._equipo.Entity = null;
						previousValue.tablagenerals.Remove(this);
					}
					this._equipo.Entity = value;
					if ((value != null))
					{
						value.tablagenerals.Add(this);
						this._idequipo = value.id;
					}
					else
					{
						this._idequipo = default(int);
					}
					this.SendPropertyChanged("equipo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.topfives")]
	public partial class topfive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idusuario;
		
		private int _puntosporfecha;
		
		private EntityRef<usuario> _usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidusuarioChanging(int value);
    partial void OnidusuarioChanged();
    partial void OnpuntosporfechaChanging(int value);
    partial void OnpuntosporfechaChanged();
    #endregion
		
		public topfive()
		{
			this._usuario = default(EntityRef<usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idusuario", DbType="Int NOT NULL")]
		public int idusuario
		{
			get
			{
				return this._idusuario;
			}
			set
			{
				if ((this._idusuario != value))
				{
					if (this._usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidusuarioChanging(value);
					this.SendPropertyChanging();
					this._idusuario = value;
					this.SendPropertyChanged("idusuario");
					this.OnidusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_puntosporfecha", DbType="Int NOT NULL")]
		public int puntosporfecha
		{
			get
			{
				return this._puntosporfecha;
			}
			set
			{
				if ((this._puntosporfecha != value))
				{
					this.OnpuntosporfechaChanging(value);
					this.SendPropertyChanging();
					this._puntosporfecha = value;
					this.SendPropertyChanged("puntosporfecha");
					this.OnpuntosporfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_topfive", Storage="_usuario", ThisKey="idusuario", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.topfives.Remove(this);
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.topfives.Add(this);
						this._idusuario = value.id;
					}
					else
					{
						this._idusuario = default(int);
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.topten")]
	public partial class topten : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idusuario;
		
		private int _puntosportorneo;
		
		private EntityRef<usuario> _usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidusuarioChanging(int value);
    partial void OnidusuarioChanged();
    partial void OnpuntosportorneoChanging(int value);
    partial void OnpuntosportorneoChanged();
    #endregion
		
		public topten()
		{
			this._usuario = default(EntityRef<usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idusuario", DbType="Int NOT NULL")]
		public int idusuario
		{
			get
			{
				return this._idusuario;
			}
			set
			{
				if ((this._idusuario != value))
				{
					if (this._usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidusuarioChanging(value);
					this.SendPropertyChanging();
					this._idusuario = value;
					this.SendPropertyChanged("idusuario");
					this.OnidusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_puntosportorneo", DbType="Int NOT NULL")]
		public int puntosportorneo
		{
			get
			{
				return this._puntosportorneo;
			}
			set
			{
				if ((this._puntosportorneo != value))
				{
					this.OnpuntosportorneoChanging(value);
					this.SendPropertyChanging();
					this._puntosportorneo = value;
					this.SendPropertyChanged("puntosportorneo");
					this.OnpuntosportorneoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_topten", Storage="_usuario", ThisKey="idusuario", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.toptens.Remove(this);
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.toptens.Add(this);
						this._idusuario = value.id;
					}
					else
					{
						this._idusuario = default(int);
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.torneos")]
	public partial class torneo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private EntitySet<fecha> _fechas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public torneo()
		{
			this._fechas = new EntitySet<fecha>(new Action<fecha>(this.attach_fechas), new Action<fecha>(this.detach_fechas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="torneo_fecha", Storage="_fechas", ThisKey="id", OtherKey="idtorneo")]
		public EntitySet<fecha> fechas
		{
			get
			{
				return this._fechas;
			}
			set
			{
				this._fechas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_fechas(fecha entity)
		{
			this.SendPropertyChanging();
			entity.torneo = this;
		}
		
		private void detach_fechas(fecha entity)
		{
			this.SendPropertyChanging();
			entity.torneo = null;
		}
	}
}
#pragma warning restore 1591
